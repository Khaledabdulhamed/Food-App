{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\khale\\\\NEW-Projects\\\\Food App\\\\src\\\\components\\\\Cart\\\\Checkout.js\",\n  _s = $RefreshSig$();\nimport { useRef, useState } from 'react';\nimport React from 'react';\nimport './Checkout.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst classNames = require('classnames');\nconst isEmpty = value => value.trim() === '';\nconst isFiveChars = value => value.trim().length === 5;\nconst Checkout = props => {\n  _s();\n  const [formInputsValidity, setFormInputValidity] = useState({\n    name: true,\n    street: true,\n    city: true,\n    postalCode: true\n  });\n  const nameInput = useRef();\n  const streetInput = useRef();\n  const postalInput = useRef();\n  const cityInput = useRef();\n  const confirmHandler = event => {\n    event.preventDefault();\n    const enteredName = nameInput.current.value;\n    const enteredStreet = streetInput.current.value;\n    const enteredPostal = postalInput.current.value;\n    const enteredCity = cityInput.current.value;\n    const enteredNameIsValid = !isEmpty(enteredName);\n    const enteredStreetIsValid = !isEmpty(enteredStreet);\n    const enteredCityIsValid = !isEmpty(enteredCity);\n    const enteredPostalIsValid = isFiveChars(enteredPostal);\n    setFormInputValidity({\n      name: enteredNameIsValid,\n      street: enteredStreetIsValid,\n      city: enteredCityIsValid,\n      postalCode: enteredPostalIsValid\n    });\n    const formIsValid = enteredCityIsValid && enteredNameIsValid && enteredPostalIsValid && enteredStreetIsValid;\n    if (formIsValid) {\n      return;\n    }\n  };\n  const nameClasses = classNames('control', {\n    'invalid': formInputsValidity.name\n  });\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: \"form\",\n    onSubmit: confirmHandler,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: nameClasses,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"name\",\n        children: \"Your Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"name\",\n        ref: nameInput\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 5\n      }, this), !formInputsValidity.name && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"please enter a valid name!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 34\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"control\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"street\",\n        children: \"Street\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"street\",\n        ref: streetInput\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 5\n      }, this), !formInputsValidity.street && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"please enter a valid street!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 36\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"control\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"postal\",\n        children: \"Postal Code\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"postal\",\n        ref: postalInput\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 5\n      }, this), !formInputsValidity.postalCode && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"please enter a valid Postal Code!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 40\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"control\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"city\",\n        children: \"City\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"city\",\n        ref: cityInput\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 5\n      }, this), !formInputsValidity.city && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"please enter a valid City!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 34\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"button\",\n      onClick: props.onCancel,\n      children: \"Cancel\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"submit\",\n      onClick: confirmHandler,\n      children: \"Confirm\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 10\n  }, this);\n};\n_s(Checkout, \"gOUQGBttOzgPUJMm0psC1CSiOK0=\");\n_c = Checkout;\nexport default Checkout;\nvar _c;\n$RefreshReg$(_c, \"Checkout\");","map":{"version":3,"names":["useRef","useState","React","jsxDEV","_jsxDEV","classNames","require","isEmpty","value","trim","isFiveChars","length","Checkout","props","_s","formInputsValidity","setFormInputValidity","name","street","city","postalCode","nameInput","streetInput","postalInput","cityInput","confirmHandler","event","preventDefault","enteredName","current","enteredStreet","enteredPostal","enteredCity","enteredNameIsValid","enteredStreetIsValid","enteredCityIsValid","enteredPostalIsValid","formIsValid","nameClasses","className","onSubmit","children","htmlFor","fileName","_jsxFileName","lineNumber","columnNumber","type","id","ref","onClick","onCancel","_c","$RefreshReg$"],"sources":["C:/Users/khale/NEW-Projects/Food App/src/components/Cart/Checkout.js"],"sourcesContent":["import { useRef, useState } from 'react'\r\nimport React from 'react'\r\nimport './Checkout.css'\r\nconst classNames = require('classnames');\r\n\r\nconst isEmpty = value => value.trim() === ''\r\nconst isFiveChars = value => value.trim().length === 5;\r\n\r\n\r\n\r\n\r\nconst Checkout = (props) => {\r\nconst [formInputsValidity, setFormInputValidity] = useState({\r\n    name: true,\r\n    street: true,\r\n    city: true,\r\n    postalCode: true,\r\n})\r\nconst nameInput = useRef();\r\nconst streetInput = useRef();\r\nconst postalInput = useRef();\r\nconst cityInput = useRef();\r\n\r\n    const confirmHandler = (event) => {\r\n        event.preventDefault();\r\n        const enteredName = nameInput.current.value;\r\n        const enteredStreet = streetInput.current.value;\r\n        const enteredPostal = postalInput.current.value;\r\n        const enteredCity = cityInput.current.value;\r\n\r\n        const enteredNameIsValid = !isEmpty(enteredName);\r\n        const enteredStreetIsValid = !isEmpty(enteredStreet);\r\n        const enteredCityIsValid = !isEmpty(enteredCity);\r\n        const enteredPostalIsValid = isFiveChars(enteredPostal);\r\n    \r\n        setFormInputValidity({\r\n            name: enteredNameIsValid,\r\n            street: enteredStreetIsValid,\r\n            city: enteredCityIsValid,\r\n            postalCode: enteredPostalIsValid,\r\n         })\r\n\r\n        const formIsValid = enteredCityIsValid &&\r\n         enteredNameIsValid &&\r\n         enteredPostalIsValid && \r\n         enteredStreetIsValid;\r\n\r\n       \r\n\r\n\r\n         if (formIsValid) {\r\n            return;\r\n         }\r\n        \r\n    }\r\n\r\n    const nameClasses = classNames('control', {\r\n        'invalid': formInputsValidity.name })\r\n\r\n  return <form className='form' onSubmit={confirmHandler}>\r\n    <div className={nameClasses}>\r\n    <label htmlFor='name'>Your Name</label>\r\n    <input type='text' id='name' ref={nameInput} />\r\n    {!formInputsValidity.name && <p>please enter a valid name!</p>}\r\n    </div>\r\n    <div className='control'>\r\n    <label htmlFor='street'>Street</label>\r\n    <input type='text' id='street' ref={streetInput} />\r\n    {!formInputsValidity.street && <p>please enter a valid street!</p>}\r\n    </div>\r\n    <div className='control'>\r\n    <label htmlFor='postal'>Postal Code</label>\r\n    <input type='text' id='postal' ref={postalInput} />\r\n    {!formInputsValidity.postalCode && <p>please enter a valid Postal Code!</p>}\r\n    </div>\r\n    <div className='control'>\r\n    <label htmlFor='city'>City</label>\r\n    <input type='text' id='city' ref={cityInput} />\r\n    {!formInputsValidity.city && <p>please enter a valid City!</p>}\r\n    </div>\r\n\r\n    <button type='button' onClick={props.onCancel} >Cancel</button>\r\n    <button className='submit' onClick={confirmHandler}>Confirm</button>\r\n  </form>\r\n    \r\n  \r\n}\r\n\r\nexport default Checkout"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}