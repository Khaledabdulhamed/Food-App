{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\khale\\\\NEW-Projects\\\\Food App\\\\src\\\\components\\\\Meals\\\\Available-Meals\\\\Available-Meals.jsx\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport './Available-Meals.css';\nimport Card from '../../UI/Card/Card';\nimport MealItems from '../Meal-Items/Meal-Items';\nimport { useEffect } from 'react';\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AvailableMeals = () => {\n  _s();\n  const [meals, setMeals] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [httpError, setHttpError] = useState();\n  useEffect(() => {\n    const fetchMeals = async () => {\n      const response = await fetch('https://http-post-59704-default-rtdb.firebaseio.com/meal');\n      if (!response.ok) {\n        throw new Error('Someting Went wrong!');\n      }\n      const responseData = await response.json();\n      const loadedMeals = [];\n      for (const key in responseData) {\n        loadedMeals.push({\n          id: key,\n          name: responseData[key].name,\n          price: responseData[key].price,\n          description: responseData[key].description\n        });\n      }\n      setMeals(loadedMeals);\n      setIsLoading(false);\n    };\n    fetchMeals().catch(error => {\n      setIsLoading(false);\n      setHttpError(error.message);\n    });\n  }, []);\n  if (isLoading) {\n    return /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"mealsLoading\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }, this);\n  }\n  if (httpError) {\n    return /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"mealsError\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: httpError\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 12\n    }, this);\n  }\n  const mealsList = meals.map(meal => /*#__PURE__*/_jsxDEV(MealItems, {\n    id: meal.id,\n    name: meal.name,\n    description: meal.description,\n    price: meal.price\n  }, meal.id, false, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 15\n  }, this));\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: \"meals\",\n    children: /*#__PURE__*/_jsxDEV(Card, {\n      children: mealsList\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 5\n  }, this);\n};\n_s(AvailableMeals, \"6pndJp/WWpMtmhSnoCH9k0tFnXc=\");\n_c = AvailableMeals;\nexport default AvailableMeals;\nvar _c;\n$RefreshReg$(_c, \"AvailableMeals\");","map":{"version":3,"names":["React","Card","MealItems","useEffect","useState","jsxDEV","_jsxDEV","AvailableMeals","_s","meals","setMeals","isLoading","setIsLoading","httpError","setHttpError","fetchMeals","response","fetch","ok","Error","responseData","json","loadedMeals","key","push","id","name","price","description","catch","error","message","className","children","fileName","_jsxFileName","lineNumber","columnNumber","mealsList","map","meal","_c","$RefreshReg$"],"sources":["C:/Users/khale/NEW-Projects/Food App/src/components/Meals/Available-Meals/Available-Meals.jsx"],"sourcesContent":["import React from 'react'\r\nimport './Available-Meals.css'\r\nimport Card from '../../UI/Card/Card';\r\nimport MealItems from '../Meal-Items/Meal-Items';\r\nimport { useEffect } from 'react';\r\nimport { useState } from 'react';\r\n\r\n\r\nconst AvailableMeals = () => {\r\n  const [meals, setMeals] = useState([]);\r\n  const [isLoading, setIsLoading] = useState(true)\r\n  const [httpError, setHttpError] = useState()\r\n\r\n  useEffect(()=>{\r\n    const fetchMeals = async () => {\r\n     \r\n   const response = await fetch('https://http-post-59704-default-rtdb.firebaseio.com/meal')\r\n      \r\n   if(!response.ok){\r\n    throw new Error('Someting Went wrong!');\r\n   }\r\n   const responseData= await response.json();\r\n\r\n      const loadedMeals = [];\r\n\r\n      for (const key in responseData ){\r\n        loadedMeals.push({\r\n          id: key,\r\n          name: responseData[key].name,\r\n          price: responseData[key].price,\r\n          description: responseData[key].description,\r\n\r\n\r\n        })\r\n        \r\n        }\r\n        setMeals(loadedMeals)\r\n        setIsLoading(false)\r\n      }\r\n        \r\n\r\n  fetchMeals().catch((error) => {\r\n    setIsLoading(false);\r\n    setHttpError(error.message)\r\n  });\r\n\r\n\r\n\r\n  }, [])\r\n\r\n  if (isLoading){\r\n    return (<section className='mealsLoading'>\r\n      <p>Loading...</p>\r\n    </section>)\r\n  }\r\n\r\n  if (httpError) {\r\n    return <section className='mealsError'>\r\n    <p>{httpError}</p>\r\n  </section>\r\n  }\r\n\r\n    const mealsList =meals.map(\r\n      meal => <MealItems \r\n      id={meal.id}\r\n      key= {meal.id} \r\n      name={meal.name} \r\n    description = {meal.description}\r\n     price = {meal.price} />);\r\n  return (\r\n    <section className='meals'>\r\n        <Card>\r\n            {mealsList}\r\n        </Card>\r\n    </section>\r\n  )\r\n}\r\n\r\nexport default AvailableMeals"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAO,uBAAuB;AAC9B,OAAOC,IAAI,MAAM,oBAAoB;AACrC,OAAOC,SAAS,MAAM,0BAA0B;AAChD,SAASC,SAAS,QAAQ,OAAO;AACjC,SAASC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAGjC,MAAMC,cAAc,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC3B,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGN,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACO,SAAS,EAAEC,YAAY,CAAC,GAAGR,QAAQ,CAAC,IAAI,CAAC;EAChD,MAAM,CAACS,SAAS,EAAEC,YAAY,CAAC,GAAGV,QAAQ,CAAC,CAAC;EAE5CD,SAAS,CAAC,MAAI;IACZ,MAAMY,UAAU,GAAG,MAAAA,CAAA,KAAY;MAEhC,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,0DAA0D,CAAC;MAExF,IAAG,CAACD,QAAQ,CAACE,EAAE,EAAC;QACf,MAAM,IAAIC,KAAK,CAAC,sBAAsB,CAAC;MACxC;MACA,MAAMC,YAAY,GAAE,MAAMJ,QAAQ,CAACK,IAAI,CAAC,CAAC;MAEtC,MAAMC,WAAW,GAAG,EAAE;MAEtB,KAAK,MAAMC,GAAG,IAAIH,YAAY,EAAE;QAC9BE,WAAW,CAACE,IAAI,CAAC;UACfC,EAAE,EAAEF,GAAG;UACPG,IAAI,EAAEN,YAAY,CAACG,GAAG,CAAC,CAACG,IAAI;UAC5BC,KAAK,EAAEP,YAAY,CAACG,GAAG,CAAC,CAACI,KAAK;UAC9BC,WAAW,EAAER,YAAY,CAACG,GAAG,CAAC,CAACK;QAGjC,CAAC,CAAC;MAEF;MACAlB,QAAQ,CAACY,WAAW,CAAC;MACrBV,YAAY,CAAC,KAAK,CAAC;IACrB,CAAC;IAGLG,UAAU,CAAC,CAAC,CAACc,KAAK,CAAEC,KAAK,IAAK;MAC5BlB,YAAY,CAAC,KAAK,CAAC;MACnBE,YAAY,CAACgB,KAAK,CAACC,OAAO,CAAC;IAC7B,CAAC,CAAC;EAIF,CAAC,EAAE,EAAE,CAAC;EAEN,IAAIpB,SAAS,EAAC;IACZ,oBAAQL,OAAA;MAAS0B,SAAS,EAAC,cAAc;MAAAC,QAAA,eACvC3B,OAAA;QAAA2B,QAAA,EAAG;MAAU;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACV,CAAC;EACZ;EAEA,IAAIxB,SAAS,EAAE;IACb,oBAAOP,OAAA;MAAS0B,SAAS,EAAC,YAAY;MAAAC,QAAA,eACtC3B,OAAA;QAAA2B,QAAA,EAAIpB;MAAS;QAAAqB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACX,CAAC;EACV;EAEE,MAAMC,SAAS,GAAE7B,KAAK,CAAC8B,GAAG,CACxBC,IAAI,iBAAIlC,OAAA,CAACJ,SAAS;IAClBuB,EAAE,EAAEe,IAAI,CAACf,EAAG;IAEZC,IAAI,EAAEc,IAAI,CAACd,IAAK;IAClBE,WAAW,EAAIY,IAAI,CAACZ,WAAY;IAC/BD,KAAK,EAAIa,IAAI,CAACb;EAAM,GAHba,IAAI,CAACf,EAAE;IAAAS,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAGQ,CAAC,CAAC;EAC3B,oBACE/B,OAAA;IAAS0B,SAAS,EAAC,OAAO;IAAAC,QAAA,eACtB3B,OAAA,CAACL,IAAI;MAAAgC,QAAA,EACAK;IAAS;MAAAJ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACR;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACF,CAAC;AAEd,CAAC;AAAA7B,EAAA,CApEKD,cAAc;AAAAkC,EAAA,GAAdlC,cAAc;AAsEpB,eAAeA,cAAc;AAAA,IAAAkC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}